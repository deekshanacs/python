def create_result_file(file_path):
  with open(file_path, 'w') as file:
        file.write("Name\tRegister Number\tSubject1\tSubject2\tSubject3\tSubject4\tSubject5\tTotal\tPercentage\n")
         for i in range(1, 31):
            name = f"Student{i}"
            reg_number = f"REG00{i}"
            grades = ['O', 'A', 'B', 'C', 'D']  # Sample grades
            total_marks = sum(ord(grade) - ord('A') + 9 if grade != 'U' else 0 for grade in grades)
            percentage = (total_marks / 50) * 100
            # Write student data to the file
            file.write(f"{name}\t{reg_number}\t{'\t'.join(grades)}\t{total_marks}\t{percentage:.2f}%\n")
def read_result_file(file_path):
    with open(file_path, 'r') as file:
        print(file.read())
def analyze_results(input_file, output_file):
    categories = {
        "I": [],
        "II": [],
        "III": [],
        "IV": [],
        "V": []
    }
    with open(input_file, 'r') as input_file:
        # Skip header
        next(input_file)
        for line in input_file:
            data = line.strip().split('\t')
            percentage = float(data[-1].strip('%'))
            if percentage >= 90:
                categories["I"].append(data)
            elif 80 <= percentage < 90:
                categories["II"].append(data)
            elif 70 <= percentage < 80:
                categories["III"].append(data)
            elif percentage < 70:
                categories["IV"].append(data)
            if 'U' in data[2:7]:
                categories["V"].append(data)

    with open(output_file, 'w') as output_file:
        output_file.write("Analysis of Student Results:\n\n")
        for category, students in categories.items():
            output_file.write(f"Category {category}:\n")
            for student in students:
                output_file.write(f"\t{' | '.join(student)}\n")
            output_file.write("\n")

def main():
    result_file_path = "result.txt"
    analysis_file_path = "analysis.txt"
    create_result_file(result_file_path)
    print("File created successfully.")
    print("\nContent of result file:")
    read_result_file(result_file_path)
    analyze_results(result_file_path, analysis_file_path)
    print("\nAnalysis of student results written to analysis.txt")

if __name__ == "__main__":
    main()
